generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  username      String    @unique
  email         String    @unique
  passwordHash  String
  role          String    @default("adventurer") // "guild_leader" or "adventurer"
  title         String?   // e.g., "Knight", "Wizard", "Merchant"
  rank          Int       @default(1)
  experience    Int       @default(0)
  gold          Int       @default(100)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sessions      Session[]
  quests       Quest[]   @relation("QuestPoster")
  acceptedQuests Quest[]  @relation("QuestAccepter")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Quest {
  id          String   @id @default(cuid())
  title       String
  description String
  reward      Int
  difficulty  String   // e.g., "Novice", "Adept", "Master", "Legendary"
  status      String   @default("available") // "available", "accepted", "completed", "failed"
  posterId    String
  accepterId  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  poster      User     @relation("QuestPoster", fields: [posterId], references: [id])
  accepter    User?    @relation("QuestAccepter", fields: [accepterId], references: [id])
} 